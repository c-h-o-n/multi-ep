---
import { Icon } from "astro-icon";
// import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";
import logo from '~/assets/logo.png';
import { Picture } from '@astrojs/image/components';
const navItems: Array<NavItem> = [
  { title: "Szolgáltatásaink", url: "#szolgaltatasaink" },
  { title: "Referenciák", url: "#referenciak" },
  { title: "Árajánlat", url: "#arajanlat" },
];
---

<header
  id="page-header"
  class="absolute bottom-0 z-20 w-full items-center justify-between border-b border-transparent px-8 py-4 hidden sm:flex"
>
  <a id="largeNavLogo" class="flex items-center gap-3 invisible" href="#">
    <Picture class={'hidden sm:block'} id="logo" src={logo} alt="logo" sizes="2.5rem" widths={[55]} />
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="h-8" />
      </button>
      <!-- <ThemeSwitcher /> -->
    </div>
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed inset-0 bg-default px-8 py-4 text-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Picture src={logo} alt="logo" sizes="4rem" widths={[64]} class={'h-16'} />
          </div>
          <nav>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    const down = document.querySelector('#down');
    const logo = document.querySelector('#largeNavLogo');
    if(down) {
      console.log(page.scrollTop);
      down.classList.toggle('opacity-0', page.scrollTop!==0)
      down.classList.toggle('h-0', page.scrollTop!==0)
    }
    if(logo) {
      logo.classList.toggle('invisible', d >= 0)

    }
    header.classList.toggle("fixed-header", d < 0);
    header.classList.toggle("hidden", d >= 0);
    header.classList.toggle("flex", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply border-default bg-default text-default;
  }

  .modal.is-open {
    @apply block;
  }
</style>
